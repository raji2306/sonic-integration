name: Springboot-React CI/CD
run-name: Hexaware-Sonic-Run

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions: write-all

env:
  MYSQL_IMAGE: mysql-boom
  BACKEND_IMAGE: spring-image
  FRONTEND_IMAGE: react-image
  MYSQL_ROOT_PASSWORD: raji123*
  MYSQL_DATABASE: devops
  MYSQL_USER: raji
  MYSQL_PASSWORD: raji123*

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build Spring Boot app
        run: mvn -B clean package --file ./spring-backend/pom.xml

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: ./spring-backend/target/*.jar

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
  
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: npm
          cache-dependency-path: ./react-frontend/package-lock.json  # ðŸ‘ˆ Fix here
  
      - name: Install Dependencies & Build
        working-directory: ./react-frontend
        run: npm install
   
      # - name: Run Jest Tests
      #   working-directory: ./react-frontend
      #   run: npm test -- --ci --watchAll=false
  
      - name: Build Frontend
        working-directory: ./react-frontend
        run: CI=false npm run build
  
      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./react-frontend/build

  integration-test:
    needs: [build-backend]
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -h 127.0.0.1" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: .

      - name: Run Integration Tests
        run: mvn verify -Dspring.datasource.url=jdbc:mysql://127.0.0.1:3306/${{ env.MYSQL_DATABASE }}

  dockerize:
    needs: [build-backend, build-frontend, integration-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: ./spring-backend

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: ./react-frontend/build

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.BACKEND_IMAGE }}:${{ github.run_number }} ./spring-backend
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.BACKEND_IMAGE }}:${{ github.run_number }}

      - name: Build & Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.FRONTEND_IMAGE }}:${{ github.run_number }} ./react-frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.FRONTEND_IMAGE }}:${{ github.run_number }}


